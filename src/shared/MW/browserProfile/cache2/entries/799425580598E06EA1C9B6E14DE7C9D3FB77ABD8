(function(jwplayer) {
    var plugin = function(player, config, div) {
        var seeking = false,
            isFullscreen = false,
            cuePoints = [],
            maxPosition = 0.0,
            startPosition = 0.0,
            percentageComplete = 1,
            duration,
            cuePointResolve,
            cuepointPromise = new Promise(function(resolve, reject){
                  cuePointResolve = resolve;
                });

        var init = function() {
            cuePoints = config.cuePoints || cuePoints;
            maxPosition = parseInt(config.maxPosition, 10) || maxPosition;
            percentageComplete = config.percentageComplete > percentageComplete ? percentageComplete : config.percentageComplete || percentageComplete;

            if(config.startPosition && config.startPosition <= maxPosition) {
                startPosition = config.startPosition;
                // remove points before start position.
                cuePoints = _.filter(cuePoints, function(point) {
                    return (point >= startPosition);
                });
                player.seek(startPosition).pause(true);
            }

            player
                .onTime(updateMaxPosition)
                .onError(onError)
                .onSeek(handleSeek)
                .onResize(centerOverlay)
                .onReady(_(createOverlay).once())
                .onFullscreen(function(ev) {
                    /*
                        Workaround. The overlay needs a little
                        extra nudge when coming out of fullscreen.
                    */
                    if(!ev.fullscreen) {
                        centerOverlay();
                    }
                })
                .onBuffer(function() {
                    seeking = false;
                })
                .onReady(function() {
                    if(player.getRenderingMode() === 'flash') {
                        player.addButton(
                            config.assets.fullscreenButton,
                            '',
                            _(setFlashFullscreen).bind(this), 'fs'
                        );
                    }
                });
        };

        var removeCuepointsAtOrBefore = function(position) {
            cuePoints = _.reject(cuePoints, function(point) {
                return (point <= position);
            });
        }

        var hideOverlay = function(element) {
            $(element).hide();
        };

        var showOverlay = function(element) {
            centerOverlay();
            $(element).draggable({});
            $(element).show();
        };

        var onError = function(event) {
            var errVideo = config.assets.errorVideoUrl;
            setTimeout(function(){
		    // load the error message
                    player.stop();
                    player.setup({
                        file: errVideo,
                        autostart:true
                    }).load().play();
                }, 1);

	}; // end, onError

        var enforceCuePoints = function(event) {
            var passedCuepoint;

            if (!duration || duration != event.duration) {
                duration = event.duration;
            }
            if (!cuePoints.length) {
                return;
            }

            // find those points before event position.
            lessThan = _.filter(cuePoints, function(point) {
                return (point <= event.position);
            });

            passedCuepoint = (_.isNumber(_.last(lessThan)) && event.position >= _.last(lessThan)) ? true : false;

            if(passedCuepoint && !seeking) {
                player.pause().setControls(false);
                cuePoints = _.difference(cuePoints, lessThan);
                cuePointResolve();
                showOverlay(div);
            }
        };

        var updateMaxPosition = function(event) {
            var diff = event.position - maxPosition;
            var isMaxLessThanPosition = maxPosition < event.position;
            var hasWatchedAll = maxPosition >= event.duration * percentageComplete;
            var canScrubIntoFuture = diff < 2 || (isMaxLessThanPosition && hasWatchedAll);

            if (!seeking && canScrubIntoFuture) {
                maxPosition = percentageComplete && event.position >= event.duration * percentageComplete ? event.duration : Math.max(event.position, maxPosition);
                _(enforceCuePoints).bind(this, event)();
            } else {
                seeking = true;
                enforceMaxPosition();
            }

            if (hasWatchedAll) {
                $(document).trigger('videoComplete');
            }
        };

        var handleSeek = function(event) {
            if (!seeking && event.offset > maxPosition) {
                seeking = true;
                enforceMaxPosition();
            } else {
                seeking = false;
                removeCuepointsAtOrBefore(event.offset);
            }
        };

        var enforceMaxPosition = function() {
            player.pause();
            removeCuepointsAtOrBefore(maxPosition);
            setTimeout(_(function () {
                player.seek(maxPosition);
                player.play();
            }).bind(this), 0);
        };

        var clearCuePoint = function() {
            player.setControls(true).play();
        };

        var createOverlay = function() {
            var question = 'Answer the question below.',
                dismissBtnTitle = 'Submit',
                dismissBtnCb = function(evt) {
                    evt.preventDefault();
                    hideOverlay(div);
                    $(this)
                        .parent()
                        .find('input')
                        .val('');
                    clearCuePoint();
                },
                $inner;

            if(config.dismissButton) {
                dismissBtnTitle = config.dismissButton.title || dismissBtnTitle;
                dismissBtnCb = config.dismissButton.callback || dismissBtnCb;
            }

            $inner = $('<p class="cuepoint-drag-target" style="float:left;margin-right:10px;">' + question + '</p><br><input type="text" style="width: 100%; margin-bottom: 5px;"><br><button class="btn btn-primary dismiss" style="width:100%;">' + dismissBtnTitle + '</button>');
            $(div).append($inner);

            showOverlay(div);
            $(div).css('display', 'none');
            $(div).css('color', '#000000');
            $(div).css('background', '#E1E1E1');
            $(div).css('padding', '5px');
            $(div).css('z-index', '1001');

            $inner.siblings('.dismiss').click(dismissBtnCb);
        };

        var centerOverlay = function() {
            var width = $(player.getContainer()).width();
            var height = $(player.getContainer()).height();
            var centerX = (width/2) - ($(div).width()/2);
            var centerY = (height/2) - ($(div).height()/2);

            $(div).css('left', centerX + 'px');
            $(div).css('top', centerY + 'px');
        };

        var resizeOverlay = function(ev) {
            centerOverlay();
        };

        var setFlashFullscreen = function() {
            isFullscreen = !isFullscreen;

            if(isFullscreen) {
                $('#' + player.id)
                    .css('position', 'fixed')
                    .css('top', '0')
                    .css('left', '0')
                    .css('z-index', 1000);
                player.resize('100%', '100%');
                player.onReady(_(function() {
                    player.seek(maxPosition);
                    player.play();
                }).once());
            } else {
                $('#' + player.id)
                    .css('position', '')
                    .css('top', '')
                    .css('left', '')
                    .css('z-index', '');
                player.resize(player.config.width, player.config.height);
            }
        };

        this.clearCuePoint = function() {
            clearCuePoint();
        };

        this.showOverlay = function(element) {
            showOverlay(element);
        };

        this.hideOverlay = function(element) {
            hideOverlay(element);
        };

        this.onBegin = function(callback) {
            var began = false;
            player.onPlay(function(ev) {
                var currentPosition = player.getPosition();
                if(currentPosition == startPosition && !began) {
                    callback();
                    began = true;
                }
            });
        };

        this.onProgress = function(callback, timeout) {
            var lastTrigger = 0;
            timeout = timeout || 30;
            player.onTime(function(ev) {
                var passedTimeoutPos = ev.position - lastTrigger;
                if(passedTimeoutPos >= timeout && ev.position >= maxPosition) {
                    callback();
                    lastTrigger = ev.position;
                }
            });
        };

        this.onCuepoint = function(callback) {
            cuepointPromise = $.Deferred();
            cuepointPromise.then(_(function() {
                callback();
                this.onCuepoint(callback);
            }).bind(this));
        };

        init();
    };
    jwplayer().registerPlugin('thegovernor', '', plugin);
})(jwplayer);
1÷k²çR      aøPËaøPËCê$žb¿%   {    O^partitionKey=%28https%2Ckaplanlearn.com%29,:https://static.kaplanlearn.com/js/jwplayer/plugins/thegovernor/thegovernor.js necko:classified 1 strongly-framed 1 security-info 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 request-method GET response-head HTTP/2 200 OK
date: Mon, 31 Jan 2022 19:01:57 GMT
content-type: application/javascript
content-length: 9437
server: nginx/1.20.1
last-modified: Fri, 21 Jan 2022 19:19:11 GMT
etag: "61eb072f-24dd"
server-timing: dtSInfo;desc="1"
expires: Wed, 02 Mar 2022 19:01:57 GMT
pragma: public
cache-control: max-age=2592000, public
access-control-allow-origin: https://www.kaplanlearn.com
x-content-type-options: nosniff
x-xss-protection: 1; mode=block
strict-transport-security: max-age=31536000; includeSubDomains
origin-trial: AmkYMELmgqzEWRoyrnr3FoIgXSo3a4f49i86Hvt2nu7NeBswSTnt+IjvuEJ1PQDHbmXfVhp6vdAwGsioLKZhRQwAAAB3eyJvcmlnaW4iOiJodHRwczovL2thcGxhbmxlYXJuLmNvbTo0NDMiLCJmZWF0dXJlIjoiQWxsb3dTeW5jWEhSSW5QYWdlRGlzbWlzc2FsIiwiZXhwaXJ5IjoxNjAzODA4NTgwLCJpc1N1YmRvbWFpbiI6dHJ1ZX0=
accept-ranges: bytes
X-Firefox-Spdy: h2
 original-response-headers date: Mon, 31 Jan 2022 19:01:57 GMT
content-type: application/javascript
content-length: 9437
server: nginx/1.20.1
last-modified: Fri, 21 Jan 2022 19:19:11 GMT
etag: "61eb072f-24dd"
server-timing: dtSInfo;desc="1"
set-cookie: dtCookie=v_4_srv_6_sn_T1VJGGGQGIOCI9J1V4OU8P6P93VUDMRQ_perc_100000_ol_0_mul_1_app-3A9ddfe48b467e700c_1_app-3Ad31ecafdb0206104_0; Path=/; Domain=.kaplan.com; secure
expires: Wed, 02 Mar 2022 19:01:57 GMT
cache-control: max-age=2592000
pragma: public
cache-control: public
access-control-allow-origin: https://www.kaplanlearn.com
x-content-type-options: nosniff
x-xss-protection: 1; mode=block
strict-transport-security: max-age=31536000; includeSubDomains
origin-trial: AmkYMELmgqzEWRoyrnr3FoIgXSo3a4f49i86Hvt2nu7NeBswSTnt+IjvuEJ1PQDHbmXfVhp6vdAwGsioLKZhRQwAAAB3eyJvcmlnaW4iOiJodHRwczovL2thcGxhbmxlYXJuLmNvbTo0NDMiLCJmZWF0dXJlIjoiQWxsb3dTeW5jWEhSSW5QYWdlRGlzbWlzc2FsIiwiZXhwaXJ5IjoxNjAzODA4NTgwLCJpc1N1YmRvbWFpbiI6dHJ1ZX0=
accept-ranges: bytes
X-Firefox-Spdy: h2
 ctid 2 uncompressed-len 0 net-response-time-onstart 158 net-response-time-onstop 159   $Ý